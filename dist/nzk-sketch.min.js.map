{"version":3,"file":"nzk-sketch.min.js","sources":["../src/nzk-sketch-stroke-model.js","../src/nzk-sketch-model.js","../src/nzk-sketch.js"],"sourcesContent":["export default class NzkSketchStrokeModel {\n  constructor(style, firstPoint) {\n    this.style = style\n\n    this.points = []\n\n    if (firstPoint) {\n      this.points.push({\n        s: firstPoint,\n        h: null\n      })\n    }\n  }\n\n  length() {\n    return this.points.length\n  }\n\n  lastPoint() {\n    return this.points[this.points.length - 1].s\n  }\n\n  addPoint(newPoint) {\n    this.points[this.points.length - 1].h = {\n      x: (this.points[this.points.length - 1].s.x + newPoint.x) / 2,\n      y: (this.points[this.points.length - 1].s.y + newPoint.y) / 2\n    }\n    return this.points.push({\n      s: newPoint,\n      h: null\n    })\n  }\n\n  serialize() {\n    return {\n      points: this.points,\n      style: this.style\n    }\n  }\n\n  deserialize (serialized) {\n    this.style = serialized.style\n    this.points = serialized.points || []\n  }\n}\n","\nimport NZKSketchStrokeModel from './nzk-sketch-stroke-model'\n\nexport default class NzkSketchModel {\n  constructor() {\n    this.colour = [0, 0, 0]\n    this.eraser = false\n    this.fill = false\n    this.opacity = 1.0\n    this.size = 15\n    this.scale = window.devicePixelRatio >= 1.5 ? 2 : 1\n    this.actions = []\n    this.lastActionIndex = -1\n    this.currentStroke = null\n  }\n\n  sizeScaled() {\n    return this.size * this.scale\n  }\n\n  generateStyleKey() {\n    return `${this.eraser || this.opacity === 1.0 ? 'opaque' : 'transparent'}${this.eraser ? 'Eraser' : 'Colour'}${this.fill ? 'Fill' : 'Stroke'}`\n  }\n\n  getStyle() {\n    return {\n      opacity: this.opacity,\n      colour: this.colour,\n      eraser: this.eraser,\n      size: this.sizeScaled(),\n      key: this.generateStyleKey()\n    }\n  }\n\n  initStroke(newPoint) {\n    if(this.canRedo()){\n      if(this.lastActionIndex === -1){\n        this.actions = []\n      } else {\n        this.actions = this.actions.slice(0, this.lastActionIndex + 1)\n      }\n    }\n\n    this.currentStroke = new NZKSketchStrokeModel(this.getStyle(), newPoint)\n  }\n\n  continueStroke(newPoint) {\n    this.currentStroke.addPoint(newPoint)\n  }\n\n\tsaveStroke() {\n    this.actions.push({type: 'stroke', object: this.currentStroke})\n    this.currentStroke = null\n    this.lastActionIndex++\n  }\n\n  canUndo() {\n    return this.lastActionIndex > -1\n  }\n\n  canRedo() {\n    return this.lastActionIndex < this.actions.length - 1\n  }\n\n  reset() {\n    this.actions = []\n    this.lastActionIndex = -1\n    return this.currentStroke = null\n  }\n\n  serialize(){\n    let serialized = {\n      colour: this.colour,\n      opacity: this.opacity,\n      size: this.size,\n      scale: this.scale,\n      lastActionIndex: this.lastActionIndex\n    }\n\n    serialized.actions = []\n\n    this.actions.forEach(action => {\n      serialized.actions.push({\n        type: action.type,\n        object: action.object.serialize()\n      })\n    })\n\n    if (this.currentStroke) {\n      serialized.currentStroke = this.currentStroke.serialize()\n    }\n\n    return serialized\n  }\n\n  deserialize(serialized = {}) {\n    if(serialized.colour !== undefined) {\n      this.colour = serialized.colour\n    }\n    if(serialized.opacity !== undefined) {\n      this.opacity = serialized.opacity\n    }\n    if(serialized.size !== undefined) {\n      this.size = serialized.size\n    }\n    if(serialized.scale !== undefined) {\n      this.scale = serialized.scale\n    }\n    if(serialized.lastActionIndex !== undefined) {\n      this.lastActionIndex = serialized.lastActionIndex\n    }\n\n    if(serialized.actions){\n      this.actions = []\n\n      serialized.actions.forEach(action => {\n        if(action.type === 'stroke'){\n          let stroke = new NZKSketchStrokeModel()\n          stroke.deserialize(action.object)\n\n          this.actions.push({\n            type: action.type,\n            object: stroke\n          })\n        }\n      })\n    }\n    if(serialized.currentStroke !== undefined ){\n      this.currentStroke = new NZKSketchStrokeModel()\n      this.currentStroke.deserialize(serialized.currentStroke)\n    }\n  }\n}","import NZKSketchModel from './nzk-sketch-model'\n\nexport default class NZKSketch {\n  constructor(props = {}) {\n    if(!props.containerEl){\n      throw new Error(\"NZKSketch requires a containerEl property\")\n    }\n\n    if(!props.width && props.height){\n      throw new Error(\"NZKSketch requires fixed width and height properties\")\n    }\n\n    this.containerEl = props.containerEl\n\n    // Size\n    this.width = props.containerEl.offsetWidth\n    this.height = props.containerEl.offsetHeight\n    this.scale = window.devicePixelRatio >= 1.5 ? 2 : 1\n    this.widthScaled = this.width * this.scale\n    this.heightScaled = this.height * this.scale\n    this.template = props.template\n    \n    // Model init\n    this.model = new NZKSketchModel()\n\n    // Canvas layers\n    if(this.template) {\n      this.initTemplateCanvas(this.template) \n    }\n    this.initDrawingCanvas()\n    this.initBufferCanvas()\n    this.initCacheCanvas()\n\n    // Interaction layer\n    this.initInteractionLayer()\n\n    // Drawing settings\n    this.initDrawAnimations()\n    this.setDrawingStyle(this.model.getStyle(), this.bufferCanvasCtx)\n\n    this.isDrawing = false\n\n    this.onChange = props.onChange || function () {}\n  \n    if(props.sketchData) {\n      this.deserialize(props.sketchData)\n      this.drawExistingSketch()\n    }\n  }\n\n  //\n  // Public API\n  //\n\n  setBrush({ colour, size, opacity, fill, eraser }) {\n    if(colour !== undefined) {\n      this.model.colour = colour\n    }\n\n    if(size !== undefined) {\n      this.model.size = size \n    }\n\n    if(opacity !== undefined) {\n      this.model.opacity = opacity\n    }\n\n    if(fill !== undefined) {\n      this.model.fill = fill\n    }\n\n    if(eraser !== undefined) {\n      this.model.eraser = eraser\n    }\n  }\n\n  export(options = {}) {\n    options.crop = options.crop || false\n    options.maxWidth = options.maxWidth || false\n    options.maxHeight = options.maxHeight || false\n    let canvasToExport = null\n\n    // If there is a template merge the drawing onto it and export that\n    if(this.template) {\n      this.templateCanvasCtx.drawImage(this.drawingCanvasCtx.canvas, 0, 0, this.widthScaled, this.heightScaled)\n      canvasToExport = this.templateCanvasCtx\n    } else {\n      canvasToExport = this.drawingCanvasCtx\n    }\n    \n    let box = {\n      topLeftX: 0,\n      topLeftY: 0,\n      width: this.widthScaled,\n      height: this.heightScaled\n    }\n\n    if(options.crop){\n      box = this.findBoundingBox(canvasToExport)\n    }\n\n    let shrinkRatio = 1\n    let widthShrinkRatio = 1\n    let heightShrinkRatio = 1\n\n    if(options.maxWidth && box.width > options.maxWidth){\n      widthShrinkRatio = box.width / options.maxWidth\n    }\n\n    if(options.maxHeight && box.height > options.maxHeight){\n      heightShrinkRatio = box.height / options.maxHeight \n    }\n\n    shrinkRatio = Math.max(widthShrinkRatio, heightShrinkRatio)\n\n    this.initExportCanvas()\n    this.exportCanvas.setAttribute('width', box.width / shrinkRatio)\n    this.exportCanvas.setAttribute('height', box.height / shrinkRatio)\n    this.exportCanvasCtx.globalCompositeOperation = 'copy'\n    this.exportCanvasCtx.drawImage(canvasToExport.canvas, box.topLeftX,  box.topLeftY, box.width, box.height, 0, 0, box.width / shrinkRatio, box.height / shrinkRatio)\n    let image = this.exportCanvas.toDataURL()\n    \n    this.removeExportCanvas()\n\n    return image\n  }\n\n  undo() {\n    if(!this.model.canUndo()) return\n\n    this.model.lastActionIndex--\n    this.drawingCanvasCtx.clearRect(0, 0, this.widthScaled, this.heightScaled)\n\n    for(let i = 0; i <= this.model.lastActionIndex; i++) {\n      if(this.model.actions[i].type === 'stroke') {\n        this.drawUndoStroke(this.model.actions[i].object)\n      }\n    }\n  }\n\n\tredo() {\n    if(!this.model.canRedo()) return \n\n\t\tthis.model.lastActionIndex++\n\n    let action = this.model.actions[this.model.lastActionIndex]\n    \n    if(action.type === 'stroke') {\n      this.drawUndoStroke(action.object)\n    }\n  }\n\n  canUndo() {\n    return this.model.canUndo()\n  }\n\n  canRedo() {\n    return this.model.canRedo()\n  }\n  \n  restart() {\n    this.model.reset()\n    \n    this.drawingCanvasCtx.clearRect(0, 0, this.widthScaled, this.heightScaled)\n\n    this.onChange()\n  }\n\n  serialize() {\n    return this.model.serialize()\n  }\n\n  deserialize(serialized) {\n    this.model.deserialize(serialized)\n  }\n\n  getNumberOfActions() {\n    return this.model.lastActionIndex + 1\n  }\n\n  //\n  // Internal helpers\n  //\n\n  setCanvasSize(canvas){\n    canvas.width = this.widthScaled\n    canvas.height = this.heightScaled\n  }\n\n  setLayerStyle(el){\n    el.style.width = `${this.width}px`\n    el.style.height = `${this.height}px`\n    el.style.position = 'absolute'\n    el.style.left = '0px'\n    el.style.top = '0px'\n  }\n\n  initTemplateCanvas(template) {\n    this.templateCanvas = document.createElement('canvas')\n    this.templateCanvasCtx = this.templateCanvas.getContext('2d')\n    this.setCanvasSize(this.templateCanvas)\n    this.setLayerStyle(this.templateCanvas)\n    this.templateCanvasCtx.drawImage(template, 0, 0, this.widthScaled, this.heightScaled)\n    this.templateCanvas.style.zIndex = 0\n    this.containerEl.appendChild(this.templateCanvas)\n  }\n\n  initDrawingCanvas() {\n    this.drawingCanvas = document.createElement('canvas')\n    this.drawingCanvasCtx = this.drawingCanvas.getContext('2d')\n    this.setCanvasSize(this.drawingCanvas)\n    this.setLayerStyle(this.drawingCanvas)\n    this.drawingCanvas.style.zIndex = 1\n    this.containerEl.appendChild(this.drawingCanvas)\n  }\n\n  initBufferCanvas() {\n    this.bufferCanvas = document.createElement('canvas')\n    this.bufferCanvasCtx = this.bufferCanvas.getContext('2d')\n    this.setCanvasSize(this.bufferCanvas)\n    this.setLayerStyle(this.bufferCanvas)\n    this.bufferCanvas.style.zIndex = 2\n    this.containerEl.appendChild(this.bufferCanvas)\n  }\n\n  initCacheCanvas() {\n    this.cacheCanvas = document.createElement('canvas')\n    this.cacheCanvasCtx = this.cacheCanvas.getContext('2d')\n    this.setCanvasSize(this.cacheCanvas)\n    this.setLayerStyle(this.cacheCanvas)\n    this.cacheCanvas.style.display = 'none'\n    this.containerEl.appendChild(this.cacheCanvas)\n  }\n\n  initExportCanvas() {\n    this.exportCanvas = document.createElement('canvas')\n    this.exportCanvasCtx = this.exportCanvas.getContext('2d')\n    this.setCanvasSize(this.exportCanvas)\n    this.setLayerStyle(this.exportCanvas)\n    this.exportCanvas.style.display = 'none'\n    this.containerEl.appendChild(this.exportCanvas)\n  }\n\n  removeExportCanvas() {\n    this.exportCanvas.remove()\n  }\n\n  initInteractionLayer() {\n    this.interactionLayerEl = document.createElement('div')\n    this.setLayerStyle(this.interactionLayerEl)\n    this.interactionLayerEl.style.zIndex = 3\n\n    this.onStartMouseDraw = this.onStartMouseDraw.bind(this)\n    this.onMoveMouseDraw = this.onMoveMouseDraw.bind(this)\n    this.onEndMouseDraw = this.onEndMouseDraw.bind(this)\n\n    this.interactionLayerEl.addEventListener(\"mousedown\", this.onStartMouseDraw)\n    this.interactionLayerEl.addEventListener(\"mousemove\", this.onMoveMouseDraw)\n    this.interactionLayerEl.addEventListener(\"mouseup\", this.onEndMouseDraw)\n    this.interactionLayerEl.addEventListener(\"mouseleave\", this.onEndMouseDraw)\n    this.interactionLayerEl.addEventListener(\"mouseenter\", (ev) => {\n      if (ev.buttons > 0) {\n        this.onStartMouseDraw(ev)\n      }\n    }, false)\n\n    this.onStartTouchDraw = this.onStartTouchDraw.bind(this)\n    this.onMoveTouchDraw = this.onMoveTouchDraw.bind(this)\n    this.onEndTouchDraw = this.onEndTouchDraw.bind(this)\n\n    this.interactionLayerEl.addEventListener(\"touchstart\", this.onStartTouchDraw)\n    this.interactionLayerEl.addEventListener(\"touchmove\", this.onMoveTouchDraw)\n    this.interactionLayerEl.addEventListener(\"touchend\", this.onEndTouchDraw)\n    this.interactionLayerEl.addEventListener(\"touchcancel\", this.onEndTouchDraw)\n\n    this.containerEl.appendChild(this.interactionLayerEl)\n  }\n\n  initDrawAnimations(){\n    this.drawUndo = {\n\t\t\ttransparentEraserFill: this.drawTransparentFillFinal,\n\t\t\ttransparentEraserStroke: this.drawStrokeFinal,\n\t\t\ttransparentColourFill: this.drawTransparentFillFinal,\n\t\t\ttransparentColourStroke: this.drawStrokeFinal,\n\t\t\topaqueEraserFill: this.drawEraserUndoingFillFinal,\n\t\t\topaqueEraserStroke: this.drawEraserUndoingFinal,\n\t\t\topaqueColourFill: this.drawFillFinal,\n      opaqueColourStroke: this.drawStrokeFinal\n    }\n\n\t\tthis.drawFinished = {\n\t\t\ttransparentEraserFill: this.drawTransparentFillFinal,\n\t\t\ttransparentEraserStroke: this.drawStrokeFinal,\n\t\t\ttransparentColourFill: this.drawTransparentFillFinal,\n\t\t\ttransparentColourStroke: this.drawStrokeFinal,\n\t\t\topaqueEraserFill: this.drawEraserFillFinal,\n\t\t\topaqueEraserStroke: this.drawEraser,\n\t\t\topaqueColourFill: this.drawFillFinal,\n      opaqueColourStroke: this.drawStrokeFinal\n    }\n\n\t\tthis.drawAnimation = {\n\t\t\ttransparentEraserFill: this.drawFillAndStroke,\n\t\t\ttransparentEraserStroke: this.drawFillAndStroke,\n\t\t\ttransparentColourFill: this.drawFillAndStroke,\n\t\t\ttransparentColourStroke: this.drawFillAndStroke,\n\t\t\topaqueEraserFill: this.drawEraser,\n\t\t\topaqueEraserStroke: this.drawEraser,\n\t\t\topaqueColourFill: this.drawFillAndStroke,\n      opaqueColourStroke: this.drawFillAndStroke\n    }\n  }\n\n  getMousePoint (ev) {\n    let rect = this.interactionLayerEl.getBoundingClientRect()\n\n    return {\n      x: (ev.clientX - rect.left) * this.scale,\n      y: (ev.clientY - rect.top) * this.scale\n    }\n  }\n\n  getTouchPoint (ev) {\n    let rect = this.interactionLayerEl.getBoundingClientRect()\n\n    return {\n      x: (ev.touches[0].clientX - rect.left) * this.scale,\n      y: (ev.touches[0].clientY - rect.top) * this.scale\n    }\n  }\n\n  onStartMouseDraw(ev) {\n    ev.preventDefault()\n    this.startDraw(this.getMousePoint(ev))\n  }\n\n  onStartTouchDraw(ev) {\n    ev.preventDefault()\n    ev.stopPropagation()\n    this.startDraw(this.getTouchPoint(ev))\n  }\n\n  onMoveMouseDraw(ev) {\n    ev.preventDefault()\n    ev.stopPropagation()\n    this.continueDraw(this.getMousePoint(ev))\n  }\n\n  onMoveTouchDraw(ev) {\n    ev.preventDefault()\n    ev.stopPropagation()\n    this.continueDraw(this.getTouchPoint(ev))\n  }\n\n  onEndMouseDraw(ev) {\n    this.endDraw()\n  }\n\n  onEndTouchDraw(ev) {\n    this.endDraw()\n  }\n\n  startDraw(point) {\n    this.isDrawing = true\n\n    this.model.initStroke(point)\n\n    if(this.model.currentStroke.style.eraser && this.model.currentStroke.style.opacity === 1.0) {\n      this.cacheCanvasCtx.globalCompositeOperation = \"copy\"\n      this.cacheCanvasCtx.drawImage(this.drawingCanvasCtx.canvas, 0, 0, this.widthScaled, this.heightScaled)\n      this.setDrawingStyle(this.model.currentStroke.style, this.drawingCanvasCtx)\n    }\n\n    this.setDrawingStyle(this.model.currentStroke.style, this.bufferCanvasCtx)\n\n    this.strokeAnimation() \n  }\n\n  continueDraw(point) {\n    if(!this.isDrawing) return false\n    this.model.continueStroke(point)\n  }\n\n  endDraw() {\n    if(!this.model.currentStroke) return\n    this.isDrawing = false\n    this.endStrokeAnimation() \n    this.bufferCanvasCtx.clearRect(0, 0, this.widthScaled, this.heightScaled)\n    this.drawFinishedStroke(this.model.currentStroke)\n    this.model.saveStroke()\n    this.onChange()\n  }\n\n\tdrawExistingSketch() {\n    if(this.model.lastActionIndex > -1){\n      this.model.actions.forEach(action => {\n        if(action.type === 'stroke'){\n          this.drawExistingStroke(action.object)\n        }\n      })\n    }\n  }\n\n  setDrawingStyle (style, ctx) {\n\t\tlet colour = `rgba(${style.colour[0]}, ${style.colour[1]}, ${style.colour[2]}, ${style.opacity})`\n\t\tctx.strokeStyle = colour\n\t\tctx.fillStyle = colour\n\t\tctx.lineWidth = style.size\n\t\tctx.lineJoin = \"round\"\n    ctx.lineCap = \"round\"\n  }\n\n\tstrokeAnimation() {\n    this.drawAnimationStroke(this.model.currentStroke)\n\t\tthis.reqStroke = window.requestAnimationFrame(() => this.strokeAnimation.apply(this))\n  }\n\n\tdrawAnimationStroke(stroke) {\n    this.drawAnimation[stroke.style.key].apply(this, [stroke])\n  }\n\n\tendStrokeAnimation() {\n\t\twindow.cancelAnimationFrame(this.reqStroke)\n    this.reqStroke = 0\n  }\n\n  drawUndoStroke(stroke) {\n\t\tthis.setDrawingStyle(stroke.style, this.drawingCanvasCtx)\n    this.drawUndo[stroke.style.key].apply(this, [stroke])\n  }\n\n\tdrawFinishedStroke(stroke) {\n    if(!stroke) return\n    this.setDrawingStyle(stroke.style, this.drawingCanvasCtx)\n    this.drawFinished[stroke.style.key].apply(this, [stroke])\n  }\n\n\tdrawExistingStroke(stroke) {\n\t\tthis.setDrawingStyle(stroke.style, this.drawingCanvasCtx)\n    this.drawFinished[stroke.style.key].apply(this, [stroke, false])\n  }\n  \n  trace(stroke, ctx) {\n    let nbPoints = stroke.length()\n    \n    ctx.beginPath()\n    \n    if(nbPoints < 3) {\n      ctx.moveTo(stroke.points[0].s.x, stroke.points[0].s.y)\n      ctx.lineTo(stroke.points[nbPoints-1].s.x + 0.001, stroke.points[nbPoints-1].s.y + 0.001)\n    } else {\n      ctx.moveTo(stroke.points[0].s.x, stroke.points[0].s.y)\n      \n      var i, len, move, ref\n\n      ref = stroke.points.slice(1, +(nbPoints - 2) + 1 || 9e9)\n      for (i = 0, len = ref.length; i < len; i++) {\n        move = ref[i]\n        ctx.quadraticCurveTo(move.s.x, move.s.y, move.h.x, move.h.y)\n      }\n    }\n  }\n\n  drawTransparentFillFinal(stroke) {\n    this.cacheCanvasCtx.clearRect(0, 0, this.widthScaled, this.heightScaled)\n    this.cacheCanvasCtx.globalCompositeOperation = \"source-over\"\n    this.setDrawingStyle({ ...stroke.style, opacity: 1 }, this.cacheCanvasCtx)\n    this.trace(stroke, this.cacheCanvasCtx)\n    this.cacheCanvasCtx.closePath()\n    this.cacheCanvasCtx.stroke()\n    this.cacheCanvasCtx.fill()\n\n    this.drawingCanvasCtx.globalCompositeOperation = \"source-over\"\n    this.drawingCanvasCtx.globalAlpha = stroke.style.opacity\n    this.drawingCanvasCtx.drawImage(this.cacheCanvasCtx.canvas, 0, 0, this.widthScaled, this.heightScaled)\n    this.drawingCanvasCtx.globalAlpha = 1.0\n  }\n\n  drawStrokeFinal(stroke) {\n    this.drawingCanvasCtx.globalCompositeOperation = \"source-over\"\n    this.trace(stroke, this.drawingCanvasCtx)\n    this.drawingCanvasCtx.stroke()\n  }\n\n  drawFillFinal(stroke) {\n    this.drawingCanvasCtx.globalCompositeOperation = \"source-over\"\n    this.trace(stroke, this.drawingCanvasCtx)\n    this.drawingCanvasCtx.closePath()\n    this.drawingCanvasCtx.fill()\n    this.drawingCanvasCtx.stroke()\n  }\n\n\tdrawFillAndStroke(stroke) {\n    this.bufferCanvasCtx.clearRect(0, 0, this.widthScaled, this.heightScaled)\n    this.trace(stroke, this.bufferCanvasCtx)\n    this.setDrawingStyle({ ...stroke.style, opacity: 1 }, this.bufferCanvasCtx)\n    this.bufferCanvasCtx.globalAlpha = stroke.style.opacity\n    if(this.model.fill) {\n      this.bufferCanvasCtx.closePath()\n      this.bufferCanvasCtx.fill()\n    }\n    this.bufferCanvasCtx.stroke()\n  }\n\n\tdrawEraserUndoingFinal(stroke) {\n\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"destination-out\"\n\t\tthis.trace(stroke, this.drawingCanvasCtx)\n    this.drawingCanvasCtx.stroke()\n  }\n\n\tdrawEraserUndoingFillFinal(stroke) {\n\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"destination-out\"\n\t\tthis.trace(stroke, this.drawingCanvasCtx)\n\t\tthis.drawingCanvasCtx.closePath()\n\t\tthis.drawingCanvasCtx.fill()\n    this.drawingCanvasCtx.stroke()\n  }\n\n\tdrawEraser(stroke, copy = true) {\n\t\tif(copy){\n\t\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"copy\"\n      this.drawingCanvasCtx.drawImage(this.cacheCanvasCtx.canvas, 0, 0, this.widthScaled, this.heightScaled)\n    }\n\n\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"destination-out\"\n\t\tthis.trace(stroke, this.drawingCanvasCtx)\n    this.drawingCanvasCtx.stroke()\n  }\n\n\tdrawEraserFillFinal(stroke, copy = true){\n\t\tif(copy) {\n\t\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"copy\"\n      this.drawingCanvasCtx.drawImage(this.cacheCanvasCtx.canvas, 0, 0, this.widthScaled, this.heightScaled)\n    }\n\n\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"destination-out\"\n\t\tthis.trace(stroke, this.drawingCanvasCtx)\n\t\tthis.drawingCanvasCtx.closePath()\n\t\tthis.drawingCanvasCtx.fill()\n    this.drawingCanvasCtx.stroke()\n  }\n\n  findBoundingBox(ctx) {\n    let imageData = ctx.getImageData(0, 0, this.widthScaled, this.heightScaled)\n\n    let box = {\n      topLeftX: this.widthScaled,\n      topLeftY: this.heightScaled,\n      bottomRightX: 0,\n      bottomRightY: 0\n    }\n\n    for(let x = 0; x < this.widthScaled; x++){\n      for(let y = 0; y < this.heightScaled; y++){\n        let pixelPosition = (((y * this.widthScaled) + x) * 4) + 3\n\n        if(imageData.data[pixelPosition] > 0){\n          if(x < box.topLeftX) box.topLeftX = x\n          if(y < box.topLeftY) box.topLeftY = y\n          if(x > box.bottomRightX) box.bottomRightX = x\n          if(y > box.bottomRightY) box.bottomRightY = y\n        }\n      }\n    }\n\n    box.width = box.bottomRightX - box.topLeftX\n    box.height = box.bottomRightY - box.topLeftY\n\n    return box\n  }\n}"],"names":["NzkSketchStrokeModel","style","firstPoint","points","push","s","h","this","length","newPoint","x","y","serialized","NzkSketchModel","colour","eraser","fill","opacity","size","scale","window","devicePixelRatio","actions","lastActionIndex","currentStroke","sizeScaled","key","generateStyleKey","canRedo","slice","NZKSketchStrokeModel","getStyle","addPoint","type","object","forEach","action","serialize","undefined","stroke","deserialize","_this","props","containerEl","Error","width","height","offsetWidth","offsetHeight","widthScaled","heightScaled","template","model","NZKSketchModel","initTemplateCanvas","initDrawingCanvas","initBufferCanvas","initCacheCanvas","initInteractionLayer","initDrawAnimations","setDrawingStyle","bufferCanvasCtx","isDrawing","onChange","sketchData","drawExistingSketch","options","crop","maxWidth","maxHeight","canvasToExport","templateCanvasCtx","drawImage","drawingCanvasCtx","canvas","box","topLeftX","topLeftY","findBoundingBox","shrinkRatio","widthShrinkRatio","heightShrinkRatio","Math","max","initExportCanvas","exportCanvas","setAttribute","exportCanvasCtx","globalCompositeOperation","image","toDataURL","removeExportCanvas","canUndo","clearRect","i","drawUndoStroke","reset","el","position","left","top","templateCanvas","document","createElement","getContext","setCanvasSize","setLayerStyle","zIndex","appendChild","drawingCanvas","bufferCanvas","cacheCanvas","cacheCanvasCtx","display","remove","interactionLayerEl","onStartMouseDraw","bind","onMoveMouseDraw","onEndMouseDraw","addEventListener","ev","buttons","onStartTouchDraw","onMoveTouchDraw","onEndTouchDraw","drawUndo","transparentEraserFill","drawTransparentFillFinal","transparentEraserStroke","drawStrokeFinal","transparentColourFill","transparentColourStroke","opaqueEraserFill","drawEraserUndoingFillFinal","opaqueEraserStroke","drawEraserUndoingFinal","opaqueColourFill","drawFillFinal","opaqueColourStroke","drawFinished","drawEraserFillFinal","drawEraser","drawAnimation","drawFillAndStroke","rect","getBoundingClientRect","clientX","clientY","touches","preventDefault","startDraw","getMousePoint","stopPropagation","getTouchPoint","continueDraw","endDraw","point","initStroke","strokeAnimation","continueStroke","endStrokeAnimation","drawFinishedStroke","saveStroke","_this2","drawExistingStroke","ctx","strokeStyle","fillStyle","lineWidth","lineJoin","lineCap","drawAnimationStroke","reqStroke","requestAnimationFrame","_this3","apply","cancelAnimationFrame","len","move","ref","nbPoints","beginPath","moveTo","lineTo","quadraticCurveTo","trace","closePath","globalAlpha","imageData","getImageData","bottomRightX","bottomRightY","pixelPosition","data"],"mappings":"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"}